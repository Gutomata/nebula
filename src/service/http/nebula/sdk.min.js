import{NebulaClient}from"/dist/web/main.js";import{State}from"./state.min.js";const assert=expr=>{if(!expr)throw`Failed assertion: ${expr}`},isType=(obj,type)=>typeof obj===type,isNumber=obj=>isType(obj,"number"),isString=obj=>isType(obj,"string"),isFunction=obj=>isType(obj,"function"),log=console.log,CT=NebulaClient.CustomType,DT=NebulaClient.DisplayType,RU=NebulaClient.Rollup;export class Nebula{constructor(){this.Types={INT:51,LONG:52,FLOAT:53,DOUBLE:54,STRING:55},this.reset=()=>{this.src_="",this.keys_=[],this.metrics_=[],this.groups_=[],this.start_=0,this.end_=0,this.columns_=[],this.display_=-1,this.window_=0},this.source=src=>(this.src_=src,this),this.time=(start,end)=>(this.start_=start,this.end_=end,this),this.select=(...args)=>{for(var i=0;i<args.length;++i){const arg=args[i],type=typeof arg;if("string"===type)this.keys_.push(arg);else if("function"===type)this.metrics_.push(eval(arg));else{if("object"!==type)throw`Unsupported field type: ${type}.`;this.metrics_.push(arg)}}return this},this.where=filter=>this,this.groupby=(...fields)=>{for(var i=0;i<fields.length;++i){const f=fields[i];assert(isNumber(f)),this.groups_.push(f)}return this},this.apply=(name,type,expr)=>{assert(isString(name)),assert(isNumber(type)&&(this.Types.INT,this.Types.STRING)),assert(isFunction(expr));let ct=0;switch(type){case this.Types.INT:ct=CT.INT;break;case this.Types.LONG:ct=CT.LONG;break;case this.Types.FLOAT:ct=CT.FLOAT;break;case this.Types.DOUBLE:ct=CT.DOUBLE;break;case this.Types.STRING:ct=CT.STRING;break;default:throw`Not supported type: ${type}`}return log(expr.toString()),this.columns_.push({name:name,type:ct,expr:`const ${name} = ${expr.toString()};`}),this},this.samples=()=>(this.display_=DT.SAMPLES,this),this.table=()=>(this.display_=DT.TABLE,this),this.timeline=()=>(this.display_=DT.TIMELINE,this),this.bar=()=>(this.display_=DT.BAR,this),this.pie=()=>(this.display_=DT.PIE,this),this.line=()=>(this.display_=DT.LINE,this),this.flame=()=>(this.display_=DT.FLAME,this),this.validate=()=>this.src_?0===this.start_||0===this.end_?(log(`Invalid time range [${this.start_}, ${this.end_}].`),"Invalid time range."):-1===this.display_?"Invalid display type.":0===this.keys_.length&&0===this.metrics_.length?"Keys or metrics missing":this.display_===DT.SAMPLES&&this.metrics_.length>0?(log("Can't have metrics in samples display mode."),"No metrics allowed in samples mode."):null:"Invalid table source.",this.build=()=>{const state=new State,s=state.state_;if(s.table=this.src_,s.start=this.start_,s.end=this.end_,s.keys=this.keys_,s.window=this.window_,s.display=this.display_,this.metrics_.length>0){const metric=this.metrics_[0];s.metrics=metric.C,s.rollup=metric.M}return s.customs=this.columns_,s}}}export const count=col=>({M:RU.COUNT,C:col,A:col,as:function(alias){return this.A=alias,this}});export const sum=col=>({M:RU.SUM,C:col,A:col,as:function(alias){return this.A=alias,this}});export const max=col=>({M:RU.MAX,C:col,A:col,as:function(alias){return this.A=alias,this}});export const min=col=>({M:RU.MIN,C:col,A:col,as:function(alias){return this.A=alias,this}});export const avg=col=>({M:RU.AVG,C:col,A:col,as:function(alias){return this.A=alias,this}});export const tree=col=>({M:RU.TreeMerge,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p10=col=>({M:RU.P10,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p25=col=>({M:RU.P25,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p50=col=>({M:RU.P50,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p75=col=>({M:RU.P75,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p90=col=>({M:RU.P90,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p99=col=>({M:RU.P99,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p99_9=col=>({M:RU.P99_9,C:col,A:col,as:function(alias){return this.A=alias,this}});export const p99_99=col=>({M:RU.P99_99,C:col,A:col,as:function(alias){return this.A=alias,this}});