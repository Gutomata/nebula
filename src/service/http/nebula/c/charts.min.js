import{neb}from"/dist/web/main.js";const d3=neb.d3,ds=neb.d3.select,nb=neb.bb,bb=nb.bb,bar=nb.bar,pie=nb.pie,spline=nb.spline,area=nb.area,color=i=>d3.schemeCategory10[i%10],symbols=["circle","diamond","square","triangle-up","triangle-down","cross"],symbol=i=>d3.symbol().size(81).type(symbols[i%symbols.length]),isTime=c=>"_time_"===c,pad2=v=>`${v}`.padStart(2,0),localTime=unix_ms=>new Date(unix_ms).toLocaleString(),isoTime=unix_ms=>new Date(unix_ms).toISOString(),chartId="#show";export class Charts{constructor(){this.formatTime=unix_ms=>{const date=new Date(unix_ms),y=date.getUTCFullYear(),m=pad2(date.getUTCMonth()+1),d=pad2(date.getUTCDate()),h=pad2(date.getUTCHours()),mi=pad2(date.getUTCMinutes()),s=pad2(date.getUTCSeconds());return`${y}-${m}-${d} ${h}:${mi}:${s}`},this.legend=(svg,px,py,names,width=0,vertical=!0)=>{const span=width>0&&names.length>0?width/names.length:60,legend=svg.selectAll("g.legend").data(names).enter().append("svg:g").attr("class","legend").attr("transform",(d,i)=>vertical?`translate(${px}, ${py+20*i+20})`:`translate(${px+i*span}, ${py})`);legend.append("svg:rect").attr("width",15).attr("height",15).attr("fill",(d,i)=>color(i)),legend.append("svg:text").attr("text-anchor","left").attr("x",18).attr("y",15).text((d,i)=>d)},this.displayTable=json=>{if(json.length>0){const area=ds("#show");area.html("");const tb=area.append("table");tb.append("thead").append("tr").attr("id","table_head"),tb.append("tbody").attr("id","table_content");const keys=Object.keys(json[0]),width=Math.round(100/keys.length);ds("#table_head").selectAll("th").data(keys).enter().append("th").attr("width",`${width}%`).text(d=>isTime(d)?"[time]":d),ds("#table_content").selectAll("tr").data(json).enter().append("tr").selectAll("td").data(row=>keys.map(column=>({column:column,value:isTime(column)?this.formatTime(1e3*row[column]):row[column]}))).enter().append("td").text(d=>d.value)}},this.columns=(json,keys,metrics,headless,defaultkey)=>{const cols=[...keys,...metrics],numKeys=keys.length,data=[];return cols.forEach(c=>data.push(headless?[]:[c])),json.forEach(row=>{for(let i=0;i<numKeys;++i){let kv=`${row[cols[i]]}`;defaultkey&&0==kv.length&&(kv="null"),data[i].push(kv)}for(let i=numKeys;i<cols.length;++i)data[i].push(row[cols[i]])}),data},this.key2x=(keys,option)=>{1==keys.length&&(option.data.x=keys[0],option.axis={x:{type:"category"}})},this.displayBar=(json,keys,metrics)=>{ds("#show").html("");const option={data:{columns:this.columns(json,keys,metrics),type:bar()},bar:{width:{ratio:.6}},bindto:"#show"};this.key2x(keys,option);const chart=bb.generate(option)},this.displayPie=(json,keys,metrics)=>{ds("#show").html("");const data=this.columns(json,keys,metrics,!0,!0);0==keys.length&&data.unshift([metrics[0]]);const option={data:{rows:data,type:pie()},bindto:"#show"},chart=bb.generate(option)},this.displayLine=(json,keys,metrics)=>{ds("#show").html("");const option={data:{columns:this.columns(json,keys,metrics),type:spline()},bindto:"#show"};this.key2x(keys,option);const chart=bb.generate(option)},this.displayFlame=(json,keys,metrics)=>{if(json&&json.length){const margin={top:20,right:60,bottom:20,left:60},area=ds("#show");area.html("");const width=area.node().scrollWidth-margin.left-margin.right,key=0==keys.length?null:keys[0],value=metrics[0];for(var i=0;i<json.length;++i){const title=key?json[i][key]:null,blob=JSON.parse(json[i][value]),flame=neb.flamegraph().width(width).sort(!0).minFrameSize(1);title&&flame.title(title),area.append("div").datum(blob).call(flame)}}},this.displayTimeline=(json,keys,metrics,timeCol,start)=>{ds("#show").html("");const key=0==keys.length?null:keys[0],value=metrics[0],times=[],cols={[timeCol]:times};json.forEach(row=>{const variant=key in row?row[key]:value;cols[variant]=cols[variant]||[],cols[variant].push(row[value]);const time=1e3*row[timeCol]+start;if(0==times.length||time!=times[times.length-1]){for(const v in cols){const column=cols[v];for(;column.length<times.length;)column.push(null)}times.push(time)}});const option={data:{x:timeCol,json:cols,type:area()},axis:{x:{tick:{fit:!1,count:10},type:"timeseries"}},tooltip:{format:{title:x=>d3.timeFormat("%Y-%m-%d %H:%M:%S")(x)}},zoom:{enabled:!0,type:"drag"},point:{focus:{only:!0}},bindto:"#show"},chart=bb.generate(option)}}}